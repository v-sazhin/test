openapi: 3.0.0
info:
  title: 'Reviews API'
  description: 'Ко всем запросам необходимо добавлять заголовк X-AUTH-TOKEN: токен, который можно получить в методе `Получить токен доступа к апи`.'
  version: 1.0.0
paths:
  /api/reviews:
    get:
      tags:
        - 'Гостевая книга'
      summary: 'Список отзывов'
      description: 'Список отзывов'
      operationId: 'App\Controller\Api\ApiController::reviews'
      parameters:
        -
          name: s
          in: query
          description: 'Сортировка по лайкам/дате создания отзыва (date/likes_count)'
          required: false
          schema:
            type: string
        -
          name: o
          in: query
          description: 'Порядок сортировки (1: DESC / -1:asc)'
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          description: 'Номер запрашиваемой страницы'
          required: false
          schema:
            type: integer
        -
          name: limit
          in: query
          description: 'Лимит записей на страницу'
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: 'Список отзывов с параметрами'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewsResponse'
  '/api/review/{id}':
    get:
      tags:
        - 'Гостевая книга'
      summary: 'Один отзыв'
      description: 'Один отзыв'
      operationId: 'App\Controller\Api\ApiController::review'
      parameters:
        -
          name: id
          in: path
          description: 'ID отзыва'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Объект отзыва'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '404':
          description: 'Отзыв не найден'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/review/{id}/like':
    put:
      tags:
        - 'Гостевая книга'
      summary: 'Поставить лайк'
      description: 'Поставить лайк'
      operationId: 'App\Controller\Api\ApiController::like'
      parameters:
        -
          name: id
          in: path
          description: 'ID отзыва'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Успех. Без ответа, статус 200'
        '404':
          description: 'Отзыв не найден'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 'Вы уже ставили лайк за отзыв'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/review/create:
    put:
      tags:
        - 'Гостевая книга'
      summary: 'Добавить отзыв'
      description: 'Добавить отзыв'
      operationId: 'App\Controller\Api\ApiController::createReview'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - author
                - content
              properties:
                author:
                  description: Автор
                  type: string
                content:
                  description: 'Контент (без html тегов)'
                  type: string
              type: object
      responses:
        '400':
          description: 'Есть ошибки валидации'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '200':
          description: 'Успешно сохранено. Ответа нет, код 200.'
  /api/token/create:
    get:
      tags:
        - 'Гостевая книга'
      summary: 'Получить токен доступа к апи'
      description: 'Получить токен доступа к апи'
      operationId: 'App\Controller\SecurityController::generateToken'
      responses:
        '200':
          description: Токен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
components:
  schemas:
    ReviewsResponse:
      required:
        - page
        - limit
        - total
        - items
      properties:
        page:
          description: 'Текущая страница'
          type: integer
        limit:
          description: 'Лимит отзывов на страницу'
          type: integer
        total:
          description: 'Общее количество отзывов'
          type: integer
        items:
          description: Отзывы
          type: array
          items:
            $ref: '#/components/schemas/Review'
      type: object
    ErrorResponse:
      required:
        - error
      properties:
        error:
          description: 'Текст ошибки'
          type: string
      type: object
    TokenResponse:
      required:
        - token
      properties:
        token:
          description: 'Токен доступа'
          type: string
      type: object
    ValidationError:
      required:
        - error
        - errors
      properties:
        error:
          type: boolean
        errors:
          description: 'Массив с ошибками валидации'
          properties:
            FIELD_NAME:
              description: 'Название поля (name)'
              type: array
              items:
                description: 'Текст ошибки'
                type: string
          type: object
      type: object
    Review:
      title: Отзыв
      required:
        - id
        - author
        - datetime
        - author
        - content
        - likes_count
        - liked
      properties:
        id:
          description: ID
          type: integer
        author:
          description: Автор
          type: string
        datetime:
          description: 'Дата и время написания отзыва, формат "ISO 8601"'
          type: string
          format: date-time
        content:
          description: 'Текст отзыва'
          type: string
        likes_count:
          description: 'Количество лайков'
          type: integer
      type: object
